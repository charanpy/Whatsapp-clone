{"version":3,"sources":["components/Profile/EditImage/EditImage.style.js","components/Profile/EditImage/EditImage.state.js","components/Profile/EditImage/EditImage.js","components/Profile/EditUsername/Username.state.js","components/Profile/EditUsername/Username.style.js","components/Profile/EditUsername/Username.js","components/Profile/Theme/data.js","components/Profile/Theme/Theme.style.js","components/Profile/Theme/Theme.state.js","components/Profile/Theme/Theme.js","pages/EditProfile/Profile.state.js","pages/EditProfile/Profile.style.js","components/shared/Logout/Logout.styles.js","components/shared/Logout/Logout.js","pages/EditProfile/Profile.js","components/shared/Button/Button.styles.js","components/shared/Button/Button.js","components/shared/Icon/Icon.style.js","components/shared/Icon/Icon.js","components/shared/context/Modal.js","components/shared/Modal/Modal.style.js","components/shared/Modal/Modal.js","components/shared/Input/Input.js","components/shared/Input/Input.style.js","components/shared/ImageView/ImageView.js","components/shared/ProfileImage/ProfileImage.style.js","components/shared/ProfileImage/ProfileImage.js","components/shared/Image/Image.style.js","components/shared/Image/Image.js","components/shared/Navigate/Navigate.js","components/shared/ImageEditor/Image.state.js","components/shared/ImageEditor/ImageEditor.style.js","components/shared/ImageEditor/ImageEditor.js"],"names":["ChangeImageText","styled","label","EditImageState","setModal","editor","setImage","setLoading","imageFile","unMountModal","updateImage","photoURL","changeProfilePicture","e","fileChange","alert","setCroppedImage","sendImageFb","EditImage","UseEditorState","visible","file","OnMountModal","OnUnMountModal","loading","croppedImage","blob","UseEditImage","handleFileChange","handleCroppedImage","sendImageFile","htmlFor","id","type","accept","onChange","ImageEditor","closeModal","image","content","editorRef","handleCrop","sendImage","UsernameState","currentUserId","username","inputRef","useRef","current","value","getRef","child","update","displayName","then","catch","LabelText","props","theme","color","Input","SharedInput","mapStateToProps","createStructuredSelector","selectUsername","selectUserId","connect","updateUsername","placeholder","autoComplete","name","defaultValue","ref","Button","onClick","radioButton","Wrapper","div","RadioButton","Selection","mode","input","UseThemeState","setDark","setLight","target","includes","selectBackground","dispatch","setThemeStart","setThemeLightStart","handleTheme","data","map","radio","checked","toLowerCase","style","margin","fontSize","ProfileState","changeProfile","userId","useEffect","modifiedUser","listen","on","snapshot","modifiedValue","val","off","ProfileContainer","main","chatContainer","NavigateContainer","Logout","LogoutContainer","signOutStart","unsubscribeNotification","logout","unsubscribe","danger","changeProfileStart","profile","UseProfileState","Modal","ProfileImage","height","Navigate","navigateTo","iconName","button","defaultProps","Icon","i","marginRight","IconContainer","className","ModalContext","createContext","setModalVisible","ModalProvider","children","useState","setVisible","Provider","show","ModalContainer","CSSTransition","in","timeout","classNames","unmountOnExit","InputContainer","icon","React","forwardRef","InputWrapper","border","width","search","textLight","ImageView","src","action","Image","memo","ImageContainer","img","profilePic","chatProfile","useContext","alt","selectProfilePhoto","to","ImageEditorState","modal","isVisible","photo","info","ButtonContainer","Editor","CloseButton","Close","span","scale"],"mappings":"8LAYeA,MAVSC,IAAOC,MAAV,yM,gCCgCNC,MA/BQ,CACrBC,EACAC,EACAC,EACAC,EACAC,EACAC,KAEA,MAaMC,EAAeC,IACnBC,YAAqBD,EAAUF,GAC/BF,KAKF,MAAO,CApBmBM,IACXC,YAAWD,EAAGT,IAEzBW,MAAM,iCAIiB,KACrBV,GACFW,YAAgBX,EAAQC,IAQN,KACpBW,YAAYT,EAAWD,EAAYE,EAAcC,M,QCsBtCQ,MA7CG,KAAO,MAAD,EAYlBC,cAZkB,oBAEpBC,EAFoB,KAGpBC,EAHoB,KAIpBC,EAJoB,KAKpBC,EALoB,KAMpBlB,EANoB,KAOpBC,EAPoB,KAQpBkB,EARoB,KASpBC,EAToB,KAUpBlB,EAVoB,KAWpBmB,EAXoB,OAawCC,EAC5DL,EACAjB,EACAC,EACAC,EACAmB,EACAH,GAnBoB,mBAafK,EAbe,KAaGC,EAbH,KAauBC,EAbvB,KAqBtB,OACE,qCACE,cAAC,EAAD,CAAWC,QAAQ,OAAnB,kCACA,uBACEC,GAAG,OACHC,KAAK,OACLC,OAAO,UACPC,SAAUP,IAEZ,cAACQ,EAAA,EAAD,CACEhB,QAASA,EACTiB,WAAYd,EACZe,MAAOjB,EACPkB,QAAQ,OACRC,UAAWnC,EACXoC,WAAYZ,EACZL,QAASA,EACTC,aAAcA,EACdiB,UAAWZ,Q,gBCfJa,I,IAAAA,EA3BO,CAACC,EAAeC,KACpC,MAAMC,EAAWC,iBAAO,MAuBxB,MAAO,CAACD,EArBe,KAAO,IAAD,MAC3B,GAAID,KAAQ,OAAKC,QAAL,IAAKA,GAAL,UAAKA,EAAUE,eAAf,aAAK,EAAmBC,OAElC,OADAlC,MAAM,yBACC,EAET,KAAI,OAAC+B,QAAD,IAACA,GAAD,UAACA,EAAUE,eAAX,aAAC,EAAmBC,OAEtB,OADAlC,MAAM,6BACC,EAYT,OAVgBmC,YAAO,SAEpBC,MAAMP,GACNQ,OAAO,CACNC,YAAW,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUE,eAAZ,aAAE,EAAmBC,QAEjCK,MAAK,IAAMvC,MAAM,0BACjBwC,OAAM,KACLxC,MAAM,6CAEH,K,QCtBJ,MAAMyC,EAAYvD,IAAOC,MAAV,kIAGVuD,GAAUA,EAAMC,MAAMC,QAIrBC,EAAQ3D,YAAO4D,IAAP5D,CAAH,oGCwBZ6D,EAAkBC,YAAyB,CAC/ClB,SAAUmB,IACVpB,cAAeqB,MAGFC,kBAAQJ,EAARI,EA3BE,EAAGrB,WAAUD,oBAAqB,MAAD,EACbD,EAAcC,EAAeC,GADhB,mBACzCC,EADyC,KAC/BqB,EAD+B,KAEhD,OACE,qCACE,cAACX,EAAD,mBACA,cAAC,EAAD,CACEY,YAAY,WACZC,aAAa,MACbC,KAAK,WACLC,aAAc1B,EACd2B,IAAK1B,IAEP,cAAC2B,EAAA,EAAD,CAAQC,QAASP,EAAgB5B,QAAQ,iB,gBCbhCoC,I,QAAAA,EAXK,CAClB,CACE3C,GAAI,cACJsC,KAAM,SAER,CACEtC,GAAI,aACJsC,KAAM,SCJH,MAAMM,EAAU3E,IAAO4E,IAAV,8CAGPC,EAAc7E,IAAOC,MAAV,wHAOX6E,EAAY9E,IAAO4E,IAAV,+XAGTpB,GACTA,EAAMC,MAAMsB,KAAO,oBAAsB,sBAkBhCpB,EAAQ3D,IAAOgF,MAAV,sFACFF,GCxBDG,MAZO,CAACC,EAASC,IASvB,CARcvE,IACLA,EAAEwE,OAAOrD,GACbsD,SAAS,QACjBH,IAEAC,MCSN,MAoCMtB,EAAkBC,YAAyB,CAC/CL,MAAO6B,MAQMrB,kBAAQJ,GALK0B,IAAD,CACzBC,cAAe,IAAMD,EAASC,eAC9BC,mBAAoB,IAAMF,EAASE,kBAGtBxB,EA7CD,EACZuB,cAAeN,EACfO,mBAAoBN,EACpB1B,YACK,MAAD,EACkBwB,EAAcC,EAASC,GAAtCO,EADH,oBAEJ,OACE,qCACE,cAACnC,EAAD,oBACA,cAACoB,EAAD,UACGgB,EAAKC,KAAKC,GACT,eAAChB,EAAD,CAAa/C,QAAS+D,EAAM9D,GAA5B,UACE,cAAC,EAAD,CACEC,KAAK,QACLD,GAAI8D,EAAM9D,GACVsC,KAAK,QACLnC,SAAUwD,EACVI,QAASrC,IAAUoC,EAAMxB,KAAK0B,gBAEhC,cAACjB,EAAD,IACA,cAACvB,EAAD,CAAWyC,MAAO,CAAEC,OAAQ,EAAGC,SAAU,UAAzC,SACGL,EAAMxB,SAV0BwB,EAAMxB,gBCDtC8B,I,IAAAA,EAtBM,CAACC,EAAeC,KACnCC,qBAAU,KACR,MACMC,EADUtD,YAAO,SACMC,MAAMmD,GAC7BG,EAASD,EAAaE,GAAG,iBAAkBC,IAC/C,MAAMC,EAAgBD,EAASE,MAC/B,GAAID,EAAe,CACjB,MAAMtC,EAAOsC,EAActB,SAAS,QAChC,WACA,cACJe,EAAc,CACZ/B,OACArB,MAAO2D,QAIb,MAAO,KACLJ,EAAaM,IAAI,gBAAiBL,MAEnC,CAACH,EAAQD,KCpBP,MAAMU,EAAmB9G,IAAO+G,KAAV,+MAOZvD,GAAUA,EAAMC,MAAMuD,gBAI1BC,EAAoBjH,IAAO4E,IAAV,2E,gBCVvB,MAAMsC,GAASlH,YAAOwE,IAAPxE,CAAH,6CAINmH,GAAkBnH,IAAO4E,IAAV,6EC2BbX,mBAAQ,MALKsB,IAAD,CACzB6B,aAAc,IAAM7B,EAAS6B,eAC7BC,wBAAyB,IAAM9B,EAAS8B,kBAG3BpD,EA3BA,EACbmD,aAAcE,EACdD,wBAAyBE,KAGvB,mCACE,cAACJ,GAAD,UACE,cAACD,GAAD,CACEM,QAAM,EACNlF,QAAQ,SACRmC,QAAS6C,EACTtB,MAAO,CAAEC,OAAQ,W,SCF3B,MA2BMpC,GAAkBC,YAAyB,CAC/CuC,OAAQrC,MAGKC,sBAAQJ,IARK0B,IAAD,CACzBkC,mBAAqBC,GAAYnC,EAASkC,YAAmBC,OAOhDzD,EA/BC,EAAGwD,mBAAoBrB,EAAeC,aACpDsB,EAAgBvB,EAAeC,GAE7B,eAACS,EAAD,WACE,cAACc,GAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,OAAQ,MAExB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACb,EAAD,UACE,cAACc,EAAA,EAAD,CAAUC,WAAW,IAAIC,SAAS,wBAEpC,cAAC,EAAD,IACA,cAAC,GAAD,W,mDCNSzD,M,MArBAxE,EAAOkI,OAAV,oZAEK1E,GAAWA,EAAMgE,OAAS,UAAY,Y,QCAvD,MAAMhD,EAAS,EAAGlC,UAASkF,SAAQ/C,UAASuB,WAC1C,cAAC,EAAD,CAAiBwB,OAAQA,EAAQ/C,QAASA,EAASuB,MAAOA,EAA1D,SACG1D,IAaLkC,EAAO2D,aAAe,CACpBX,QAAQ,EACRxB,MAAO,MAGMxB,O,mDCRA4D,M,MAdFpI,EAAOqI,EAAV,oLACE7E,GACPA,EAAME,OAASF,EAAMC,MAAMsB,KAAQ,UAAcvB,EAAMC,MAAM2E,OAClD5E,GAAUA,EAAM0C,WACb1C,GAAUA,EAAM8E,cAEL9E,GAAUA,EAAME,OAASF,EAAMC,MAAM2E,OAGrD5E,GACRA,EAAMC,MAAMsB,KAAO,uBAAyB,Y,QCRlD,MAAMwD,EAAgB,EAAGrC,WAAUoC,cAAaE,eAE5C,cAAC,EAAD,CAAMtC,SAAUA,EAAUoC,YAAaA,EAAaE,UAAWA,IAUnED,EAAcJ,aAAe,CAC3BjC,SAAU,IACVoC,YAAa,KAGAC,O,6FClBR,MAAME,EAAeC,wBAAc,CACxCvH,SAAS,EACTwH,gBAAiB,SA0BJC,IAvBO,EAAGC,eAAgB,MAAD,EACRC,oBAAS,GADD,mBAC/B3H,EAD+B,KACtB4H,EADsB,KAOtC,OACE,cAACN,EAAaO,SAAd,CACEhG,MAAO,CACL7B,UACAwH,gBARkB,KACtBI,GAAYE,IAAUA,MAItB,SAMGJ,M,4DCLQK,M,MAfQlJ,EAAO4E,IAAV,wT,QCeLgD,IAZD,EAAGzG,UAAS0H,cAEtB,cAACM,EAAA,EAAD,CAAeC,GAAIjI,EAASkI,QAAS,IAAKC,WAAW,OAAOC,eAAa,EAAzE,SACE,cAAC,EAAD,UAAiBV,O,2ECHvB,MAAMW,EAAiB,CAAChG,EAAOe,IAE3B,qCACE,cAAC,IAAD,2BAAWf,GAAX,IAAkBe,IAAKA,KACtBf,EAAMiG,MAAQ,cAAC,IAAD,CAAMjB,UAAU,qBAKtBkB,QAAMC,WAAWH,I,gKCZzB,MAAMI,EAAe5J,IAAO4E,IAAV,uJAIOpB,GAAUA,EAAMC,MAAMoG,SAIzClG,EAAQ3D,IAAOgF,MAAV,mWACNxB,GAAUA,EAAMsG,OAAS,MACvBtG,GAAWA,EAAMiG,KAAO,EAAI,MAGzBjG,GAAUA,EAAMC,MAAMsG,SAGpBvG,GAAWA,EAAMiG,KAAO,IAAM,IACrCjG,GAAUA,EAAMC,MAAMuG,YAGpBxG,GAAUA,EAAMC,MAAMuG,YAQvB5B,EAAOpI,IAAOqI,EAAV,kHACL7E,GAAUA,EAAMC,MAAM2E,Q,oGC1BlC,MAAM6B,EAAY,EAAGC,MAAKC,YAEtB,qCACE,cAACC,EAAA,EAAD,CAAON,MAAO,GAAIhC,OAAQ,GAAIoC,IAAKA,IACnC,cAAC1F,EAAA,EAAD,CAAQgD,QAAM,EAAClF,QAAQ,QAAQmC,QAAS0F,OAU/BT,I,IAAAA,MAAMW,KAAKJ,G,gCCjBnB,MAAMK,EAAiBtK,IAAOuK,IAAV,qGACf/G,GAAUA,EAAMsE,SACftE,GAAUA,EAAMsE,SACJtE,GAAUA,EAAMsE,SAG5BtD,EAASxE,IAAOkI,OAAV,wGCEbL,EAAe,EAAG2C,aAAYC,cAAc,KAAM3C,SAAS,MAAS,MAAD,EAClC4C,qBAAW9B,KAAxCzH,EAD+D,EAC/DA,QAASwH,EADsD,EACtDA,gBACjB,OACE,qCACE,cAAC,EAAD,CAAQlE,QAASkE,EAAjB,SACE,cAAC2B,EAAD,CACEJ,IAAKO,GAAeD,EACpBG,IAAI,aACJpJ,QAAQ,OACRuG,OAAQA,MAGZ,cAACF,EAAA,EAAD,CAAOzG,QAASA,EAAhB,SACE,cAAC,EAAD,CAAWgJ,OAAQxB,EAAiBuB,IAAKO,GAAeD,UAYhE3C,EAAaM,aAAe,CAC1BsC,YAAa,KACb3C,OAAQ,GAGV,MAAMjE,EAAkBC,YAAyB,CAC/C0G,WAAYI,MAGC3G,gBAAQJ,EAARI,CAAyB4D,I,8DCpCzBuC,M,MANDpK,EAAOuK,IAAV,yFACE/G,GAAUA,EAAMsE,SACjBtE,GAAUA,EAAMsG,Q,QCA5B,MAAMM,EAAQ,EAAGtC,SAAS,GAAIgC,QAAQ,GAAII,SAEtC,mCACE,cAAC,EAAD,CAAgBpC,OAAQA,EAAQgC,MAAOA,EAAOI,IAAKA,MAWzDE,EAAMjC,aAAe,CACnBL,OAAQ,GACRgC,MAAO,IAGMJ,QAAMW,KAAKD,I,gCCvB1B,iCAkBerC,IAbE,EAAGC,aAAYC,cAE5B,cAAC,IAAD,CAAM4C,GAAI7C,EAAV,SACE,cAAC,IAAD,CAAMQ,UAAWP,O,0DCmDR6C,IAzDU,KAAO,MAAD,EACHhC,mBAAS,CACjC3H,SAAS,EACTC,KAAM,KACNI,aAAc,KACdD,SAAS,EACTE,KAAM,OANqB,mBACtBsJ,EADsB,KACf5K,EADe,KAQvBC,EAAS0C,mBAmCf,MAAO,CAlCgDiI,EAA/C5J,QAA+C4J,EAAtC3J,KACI,CAAC4J,EAAWC,KAC/B9K,EAAS,2BACJ4K,GADG,IAEN5J,QAAS6J,EACT5J,KAAM6J,MAIa,KACrB9K,EAAS,2BACJ4K,GADG,IAEN5J,SAAS,EACTC,KAAM,KACNI,aAAc,KACdD,SAAS,MAwBXnB,EApBe,CAACmK,EAAKW,KACrB/K,EAAS,2BACJ4K,GADG,IAENvJ,aAAc+I,EACd9I,KAAMyJ,MAvB6CH,EAAhCxJ,QAAgCwJ,EAAvBvJ,aA2Bb,KACjBrB,EAAS,2BACJ4K,GADG,IAENxJ,SAAS,MA9B0CwJ,EAATtJ,Q,oFCTlBzB,IAAO4E,IAAV,wTAApB,MAeMuG,EAAkBnL,IAAO4E,IAAV,8CAIfwG,EAASpL,IAAO4E,IAAV,6PAYNyG,EAAcrL,IAAOkI,OAAV,4JAUXoD,EAAQtL,IAAOuL,KAAV,0F,oCC9BlB,MAAMpJ,EAAc,EAClBhB,UACAiB,aACAC,QACAC,UACAC,YACAC,aACAjB,UACAC,eACAiB,eAGE,cAACmF,EAAA,EAAD,CAAOzG,QAASA,EAAhB,SACE,cAACiK,EAAD,UACG7J,EACC,cAAC,IAAD,IAEA,qCACIC,EAUA,qBACE0I,IAAK1I,EACLsI,MAAM,MACNhC,OAAO,MACP6C,IAAI,iBAbN,cAAC,IAAD,CACEpG,IAAKhC,EACLF,MAAOA,EACPyH,MAAO,IACPhC,OAAQ,IACR+B,OAAQ,GACR2B,MAAO,MAUX,eAACL,EAAD,WACE,cAAC3G,EAAA,EAAD,CAAQgD,QAAM,EAAClF,QAAQ,QAAQmC,QAASrC,IAEvCZ,EACC,cAACgD,EAAA,EAAD,CAAQlC,QAASA,EAASmC,QAAShC,IAEnC,cAAC+B,EAAA,EAAD,CAAQlC,QAAQ,OAAOmC,QAASjC,OAGpC,cAAC6I,EAAD,CAAa5G,QAASrC,EAAtB,SACE,cAACkJ,EAAD,8BAwBdnJ,EAAYgG,aAAe,CACzB9F,MAAO,KACPb,aAAc,MAGDW","file":"static/js/6.6162cbbf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ChangeImageText = styled.label`\r\n  font-size: 2.1rem;\r\n  font-weight: 400;\r\n  font-family: 'Open Sans Condensed';\r\n  margin: 1.5rem 0;\r\n  color: #25d366;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport default ChangeImageText;\r\n","import { fileChange, setCroppedImage } from '../../../helpers/helpers';\r\nimport { changeProfilePicture, sendImageFb } from '../../../firebase/channels';\r\n\r\nconst EditImageState = (\r\n  setModal,\r\n  editor,\r\n  setImage,\r\n  setLoading,\r\n  imageFile,\r\n  unMountModal\r\n) => {\r\n  const handleFileChange = (e) => {\r\n    const file = fileChange(e, setModal);\r\n    if (!file) {\r\n      alert('Please select jpeg/.png file');\r\n    }\r\n  };\r\n\r\n  const handleCroppedImage = () => {\r\n    if (editor) {\r\n      setCroppedImage(editor, setImage);\r\n    }\r\n  };\r\n\r\n  const updateImage = (photoURL) => {\r\n    changeProfilePicture(photoURL, unMountModal);\r\n    setLoading();\r\n  };\r\n  const sendImageFile = () => {\r\n    sendImageFb(imageFile, setLoading, unMountModal, updateImage);\r\n  };\r\n  return [handleFileChange, handleCroppedImage, sendImageFile];\r\n};\r\n\r\nexport default EditImageState;\r\n","import React from 'react';\r\nimport ImageText from './EditImage.style';\r\nimport UseEditorState from '../../shared/ImageEditor/Image.state';\r\nimport ImageEditor from '../../shared/ImageEditor/ImageEditor';\r\nimport UseEditImage from './EditImage.state';\r\n\r\nconst EditImage = () => {\r\n  const [\r\n    visible,\r\n    file,\r\n    OnMountModal,\r\n    OnUnMountModal,\r\n    editor,\r\n    setImage,\r\n    loading,\r\n    croppedImage,\r\n    setLoading,\r\n    blob,\r\n  ] = UseEditorState();\r\n  const [handleFileChange, handleCroppedImage, sendImageFile] = UseEditImage(\r\n    OnMountModal,\r\n    editor,\r\n    setImage,\r\n    setLoading,\r\n    blob,\r\n    OnUnMountModal\r\n  );\r\n  return (\r\n    <>\r\n      <ImageText htmlFor='send'>Change Profile Image</ImageText>\r\n      <input\r\n        id='send'\r\n        type='file'\r\n        accept='image/*'\r\n        onChange={handleFileChange}\r\n      />\r\n      <ImageEditor\r\n        visible={visible}\r\n        closeModal={OnUnMountModal}\r\n        image={file}\r\n        content='SEND'\r\n        editorRef={editor}\r\n        handleCrop={handleCroppedImage}\r\n        loading={loading}\r\n        croppedImage={croppedImage}\r\n        sendImage={sendImageFile}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditImage;\r\n","import { useRef } from 'react';\r\nimport { getRef } from '../../../firebase/firebase';\r\n\r\nconst UsernameState = (currentUserId, username) => {\r\n  const inputRef = useRef(null);\r\n\r\n  const updateUsername = () => {\r\n    if (username === inputRef?.current?.value) {\r\n      alert('Updated successfully');\r\n      return false;\r\n    }\r\n    if (!inputRef?.current?.value) {\r\n      alert('Name should not be empty');\r\n      return false;\r\n    }\r\n    const userRef = getRef('users');\r\n    userRef\r\n      .child(currentUserId)\r\n      .update({\r\n        displayName: inputRef?.current?.value,\r\n      })\r\n      .then(() => alert('Successfully updated'))\r\n      .catch(() => {\r\n        alert('Something went wrong!Please try again');\r\n      });\r\n    return true;\r\n  };\r\n  return [inputRef, updateUsername];\r\n};\r\n\r\nexport default UsernameState;\r\n","import styled from 'styled-components';\r\nimport SharedInput from '../../shared/Input/Input';\r\n\r\nexport const LabelText = styled.label`\r\n  font-family: 'Open Sans Condensed';\r\n  font-size: 2.1rem;\r\n  color: ${(props) => props.theme.color};\r\n  margin-bottom: 1.4rem;\r\n`;\r\n\r\nexport const Input = styled(SharedInput)`\r\n  border: none;\r\n  outline: none;\r\n  width: 20rem;\r\n  padding: 0.9rem;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {\r\n  selectUsername,\r\n  selectUserId,\r\n} from '../../../redux-sagas/user/user.selector';\r\nimport Button from '../../shared/Button/Button';\r\nimport UsernameState from './Username.state';\r\nimport { Input, LabelText } from './Username.style';\r\n\r\nconst Username = ({ username, currentUserId }) => {\r\n  const [inputRef, updateUsername] = UsernameState(currentUserId, username);\r\n  return (\r\n    <>\r\n      <LabelText>Name</LabelText>\r\n      <Input\r\n        placeholder='Username'\r\n        autoComplete='off'\r\n        name='username'\r\n        defaultValue={username}\r\n        ref={inputRef}\r\n      />\r\n      <Button onClick={updateUsername} content='UPDATE' />\r\n    </>\r\n  );\r\n};\r\n\r\nUsername.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  currentUserId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  username: selectUsername,\r\n  currentUserId: selectUserId,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Username);\r\n","const radioButton = [\r\n  {\r\n    id: 'theme-light',\r\n    name: 'Light',\r\n  },\r\n  {\r\n    id: 'theme-dark',\r\n    name: 'Dark',\r\n  },\r\n];\r\n\r\nexport default radioButton;\r\n","import styled from 'styled-components';\r\n/* eslint-disable */\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\nexport const RadioButton = styled.label`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nexport const Selection = styled.div`\r\n  width: 1.7rem;\r\n  height: 1.7rem;\r\n  border: ${(props) =>\r\n    props.theme.mode ? '2px solid #d8e4e2' : '2px solid #212529'};\r\n  border-radius: 50%;\r\n  margin-right: 1rem;\r\n  box-sizing: border-box;\r\n  padding: 0.3rem;\r\n  &::after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    background: #009879;\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n\r\n    transition: all 500ms linear;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  &:checked + ${Selection}::after {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n","const UseThemeState = (setDark, setLight) => {\r\n  const handleTheme = (e) => {\r\n    const theme = e.target.id;\r\n    if (theme.includes('dark')) {\r\n      setDark();\r\n    } else {\r\n      setLight();\r\n    }\r\n  };\r\n  return [handleTheme];\r\n};\r\n\r\nexport default UseThemeState;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {\r\n  setThemeStart,\r\n  setThemeLightStart,\r\n} from '../../../redux-sagas/theme/theme.action';\r\n\r\nimport { selectBackground } from '../../../redux-sagas/theme/theme.selector';\r\nimport data from './data';\r\nimport { RadioButton, Selection, Input, Wrapper } from './Theme.style';\r\nimport { LabelText } from '../EditUsername/Username.style';\r\nimport UseThemeState from './Theme.state';\r\n\r\nconst Theme = ({\r\n  setThemeStart: setDark,\r\n  setThemeLightStart: setLight,\r\n  theme,\r\n}) => {\r\n  const [handleTheme] = UseThemeState(setDark, setLight);\r\n  return (\r\n    <>\r\n      <LabelText>Theme</LabelText>\r\n      <Wrapper>\r\n        {data.map((radio) => (\r\n          <RadioButton htmlFor={radio.id} key={radio.name}>\r\n            <Input\r\n              type='radio'\r\n              id={radio.id}\r\n              name='radio'\r\n              onChange={handleTheme}\r\n              checked={theme === radio.name.toLowerCase()}\r\n            />\r\n            <Selection />\r\n            <LabelText style={{ margin: 0, fontSize: '1.8rem' }}>\r\n              {radio.name}\r\n            </LabelText>\r\n          </RadioButton>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nTheme.propTypes = {\r\n  setThemeStart: PropTypes.func.isRequired,\r\n  setThemeLightStart: PropTypes.func.isRequired,\r\n  theme: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  theme: selectBackground,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setThemeStart: () => dispatch(setThemeStart()),\r\n  setThemeLightStart: () => dispatch(setThemeLightStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Theme);\r\n","import { useEffect } from 'react';\r\nimport { getRef } from '../../firebase/firebase';\r\n\r\nconst ProfileState = (changeProfile, userId) => {\r\n  useEffect(() => {\r\n    const userRef = getRef('users');\r\n    const modifiedUser = userRef.child(userId);\r\n    const listen = modifiedUser.on('child_changed', (snapshot) => {\r\n      const modifiedValue = snapshot.val();\r\n      if (modifiedValue) {\r\n        const name = modifiedValue.includes('http')\r\n          ? 'photoURL'\r\n          : 'displayName';\r\n        changeProfile({\r\n          name,\r\n          value: modifiedValue,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      modifiedUser.off('child_changed', listen);\r\n    };\r\n  }, [userId, changeProfile]);\r\n};\r\n\r\nexport default ProfileState;\r\n","import styled from 'styled-components';\r\n\r\nexport const ProfileContainer = styled.main`\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${(props) => props.theme.chatContainer};\r\n  position: relative;\r\n`;\r\n\r\nexport const NavigateContainer = styled.div`\r\n  position: absolute;\r\n  top:5%;\r\n  left: 5%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\n\r\nexport const Logout = styled(Button)`\r\n  margin: 0rem;\r\n`;\r\n\r\nexport const LogoutContainer = styled.div`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 5%;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { signOutStart } from '../../../redux-sagas/user/user.action';\r\nimport { unsubscribeNotification } from '../../../redux-sagas/message/message.action';\r\nimport { LogoutContainer, Logout as LogoutButton } from './Logout.styles';\r\n\r\nconst Logout = ({\r\n  signOutStart: logout,\r\n  unsubscribeNotification: unsubscribe,\r\n}) => {\r\n  return (\r\n    <>\r\n      <LogoutContainer>\r\n        <LogoutButton\r\n          danger\r\n          content='LOGOUT'\r\n          onClick={logout}\r\n          style={{ margin: 0 }}\r\n        />\r\n      </LogoutContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nLogout.propTypes = {\r\n  signOutStart: PropTypes.func.isRequired,\r\n  unsubscribeNotification: PropTypes.func.isRequired,\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOutStart: () => dispatch(signOutStart()),\r\n  unsubscribeNotification: () => dispatch(unsubscribeNotification()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectUserId } from '../../redux-sagas/user/user.selector';\r\nimport { changeProfileStart } from '../../redux-sagas/user/user.action';\r\nimport Navigate from '../../components/shared/Navigate/Navigate';\r\nimport ProfileImage from '../../components/shared/ProfileImage/ProfileImage';\r\nimport EditImage from '../../components/Profile/EditImage/EditImage';\r\nimport EditUsername from '../../components/Profile/EditUsername/Username';\r\nimport Theme from '../../components/Profile/Theme/Theme';\r\nimport UseProfileState from './Profile.state';\r\nimport { ProfileContainer, NavigateContainer } from './Profile.style';\r\nimport Logout from '../../components/shared/Logout/Logout';\r\nimport ModalProvider from '../../components/shared/context/Modal';\r\n\r\nconst Profile = ({ changeProfileStart: changeProfile, userId }) => {\r\n  UseProfileState(changeProfile, userId);\r\n  return (\r\n    <ProfileContainer>\r\n      <ModalProvider>\r\n        <ProfileImage height={8} />\r\n      </ModalProvider>\r\n      <EditImage />\r\n      <EditUsername />\r\n      <NavigateContainer>\r\n        <Navigate navigateTo='/' iconName='fas fa-arrow-left' />\r\n      </NavigateContainer>\r\n      <Theme />\r\n      <Logout />\r\n    </ProfileContainer>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n  changeProfileStart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeProfileStart: (profile) => dispatch(changeProfileStart(profile)),\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  userId: selectUserId,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  padding: 0.7rem;\r\n  background: ${(props) => (props.danger ? '#CC0000' : '#00C851')};\r\n  color: #fff;\r\n  font-family: 'Open Sans Condensed';\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  transition: all 500ms linear;\r\n  margin: 1.5rem 1.5rem;\r\n  outline: none;\r\n  border: none;\r\n  width: 10rem;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n  &:hover {\r\n    font-weight: 600;\r\n    background: black;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonContainer from './Button.styles';\r\n\r\nconst Button = ({ content, danger, onClick, style }) => (\r\n  <ButtonContainer danger={danger} onClick={onClick} style={style}>\r\n    {content}\r\n  </ButtonContainer>\r\n);\r\n\r\nButton.propTypes = {\r\n  content: PropTypes.string.isRequired,\r\n  danger: PropTypes.bool,\r\n  onClick: PropTypes.func.isRequired,\r\n  style: PropTypes.shape({\r\n    margin: PropTypes.number,\r\n  }),\r\n};\r\n\r\nButton.defaultProps = {\r\n  danger: false,\r\n  style: null,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n/* eslint-disable */\r\nconst Icon = styled.i`\r\n  color: ${(props) =>\r\n    (props.color && props.theme.mode && '#707477') || props.theme.Icon};\r\n  font-size: ${(props) => props.fontSize}rem;\r\n  margin-right: ${(props) => props.marginRight}rem;\r\n  cursor: pointer;\r\n  -webkit-text-stroke: 0px ${(props) => props.color || props.theme.Icon};\r\n\r\n  &:hover {\r\n    color: ${(props) =>\r\n      props.theme.mode ? 'rgba(255,255,255,.8)' : '#212529'};\r\n  }\r\n`;\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from './Icon.style';\r\n\r\nconst IconContainer = ({ fontSize, marginRight, className }) => {\r\n  return (\r\n    <Icon fontSize={fontSize} marginRight={marginRight} className={className} />\r\n  );\r\n};\r\n\r\nIconContainer.propTypes = {\r\n  fontSize: PropTypes.number,\r\n  marginRight: PropTypes.number,\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nIconContainer.defaultProps = {\r\n  fontSize: 2.3,\r\n  marginRight: 2.8,\r\n};\r\n\r\nexport default IconContainer;\r\n","import React, { createContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ModalContext = createContext({\r\n  visible: false,\r\n  setModalVisible: () => {},\r\n});\r\n\r\nconst ModalProvider = ({ children }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const setModalVisible = () => {\r\n    setVisible((show) => !show);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        visible,\r\n        setModalVisible,\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nModalProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ModalProvider;\r\n","import styled from 'styled-components';\r\n\r\nconst ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0.5px 0.5px 0.5px rgb(49, 46, 46);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000000;\r\n`;\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport ModalContainer from './Modal.style';\r\n\r\nconst Modal = ({ visible, children }) => {\r\n  return (\r\n    <CSSTransition in={visible} timeout={500} classNames='fade' unmountOnExit>\r\n      <ModalContainer>{children}</ModalContainer>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Modal;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input, Icon } from './Input.style';\r\n\r\nconst InputContainer = (props, ref) => {\r\n  return (\r\n    <>\r\n      <Input {...props} ref={ref} />\r\n      {props.icon && <Icon className='fas fa-search' />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(InputContainer);\r\n","import styled from 'styled-components';\r\n\r\nexport const InputWrapper = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  position: relative;\r\n  border-bottom: 0.5px solid ${(props) => props.theme.border};\r\n  /* margin-top: 6.7rem; */\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: ${(props) => props.width || 100}%;\r\n  padding: ${(props) => (props.icon ? 1 : 1.5)}rem;\r\n  position: relative;\r\n  border-radius: 25px;\r\n  background: ${(props) => props.theme.search};\r\n  outline: none;\r\n  border: none;\r\n  padding-left: ${(props) => (props.icon ? 6.5 : 2)}rem;\r\n  color: ${(props) => props.theme.textLight};\r\n\r\n  &::placeholder {\r\n    color: ${(props) => props.theme.textLight};\r\n    // padding-left: 8rem;\r\n    font-family: sans-serif;\r\n    font-weight: 300;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled.i`\r\n  color: ${(props) => props.theme.Icon};\r\n  font-size: 1.8rem;\r\n  position: absolute;\r\n  left: 6%;\r\n  top: 33%;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Image from '../Image/Image';\r\nimport Button from '../Button/Button';\r\n\r\nconst ImageView = ({ src, action }) => {\r\n  return (\r\n    <>\r\n      <Image width={25} height={25} src={src} />\r\n      <Button danger content='CLOSE' onClick={action} />\r\n    </>\r\n  );\r\n};\r\n\r\nImageView.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  action: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(ImageView);\r\n","import styled from 'styled-components';\r\n\r\nexport const ImageContainer = styled.img`\r\n  width: ${(props) => props.height}rem;\r\n  height: ${(props) => props.height}rem;\r\n  border-radius: calc(${(props) => props.height}rem / 2);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal/Modal';\r\nimport ImageView from '../ImageView/ImageView';\r\nimport { ModalContext as ModalProvider } from '../context/Modal';\r\nimport { selectProfilePhoto } from '../../../redux-sagas/user/user.selector';\r\nimport { ImageContainer, Button } from './ProfileImage.style';\r\n\r\nconst ProfileImage = ({ profilePic, chatProfile = null, height = 4 }) => {\r\n  const { visible, setModalVisible } = useContext(ModalProvider);\r\n  return (\r\n    <>\r\n      <Button onClick={setModalVisible}>\r\n        <ImageContainer\r\n          src={chatProfile || profilePic}\r\n          alt='user-photo'\r\n          loading='lazy'\r\n          height={height}\r\n        />\r\n      </Button>\r\n      <Modal visible={visible}>\r\n        <ImageView action={setModalVisible} src={chatProfile || profilePic} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileImage.propTypes = {\r\n  profilePic: PropTypes.string.isRequired,\r\n  chatProfile: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nProfileImage.defaultProps = {\r\n  chatProfile: null,\r\n  height: 4,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  profilePic: selectProfilePhoto,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProfileImage);\r\n","import styled from 'styled-components';\r\n\r\nconst Image = styled.img`\r\n  height: ${(props) => props.height}rem;\r\n  width: ${(props) => props.width}rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport default Image;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageContainer from './Image.style';\r\n\r\nconst Image = ({ height = 20, width = 20, src }) => {\r\n  return (\r\n    <>\r\n      <ImageContainer height={height} width={width} src={src} />\r\n    </>\r\n  );\r\n};\r\n\r\nImage.propTypes = {\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n  src: PropTypes.string.isRequired,\r\n};\r\n\r\nImage.defaultProps = {\r\n  height: 20,\r\n  width: 20,\r\n};\r\n\r\nexport default React.memo(Image);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from '../Icon/Icon';\r\n\r\nconst Navigate = ({ navigateTo, iconName }) => {\r\n  return (\r\n    <Link to={navigateTo}>\r\n      <Icon className={iconName} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nNavigate.propTypes = {\r\n  navigateTo: PropTypes.string.isRequired,\r\n  iconName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navigate;\r\n","import { useState, useRef } from 'react';\r\n\r\nconst ImageEditorState = () => {\r\n  const [modal, setModal] = useState({\r\n    visible: false,\r\n    file: null,\r\n    croppedImage: null,\r\n    loading: false,\r\n    blob: null,\r\n  });\r\n  const editor = useRef();\r\n  const { visible, file, loading, croppedImage, blob } = modal;\r\n  const onMountModal = (isVisible, photo) => {\r\n    setModal({\r\n      ...modal,\r\n      visible: isVisible,\r\n      file: photo,\r\n    });\r\n  };\r\n\r\n  const OnUnMountModal = () => {\r\n    setModal({\r\n      ...modal,\r\n      visible: false,\r\n      file: null,\r\n      croppedImage: null,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  const setImage = (img, info) => {\r\n    setModal({\r\n      ...modal,\r\n      croppedImage: img,\r\n      blob: info,\r\n    });\r\n  };\r\n\r\n  const setLoading = () => {\r\n    setModal({\r\n      ...modal,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  return [\r\n    visible,\r\n    file,\r\n    onMountModal,\r\n    OnUnMountModal,\r\n    editor,\r\n    setImage,\r\n    loading,\r\n    croppedImage,\r\n    setLoading,\r\n    blob,\r\n  ];\r\n};\r\n\r\nexport default ImageEditorState;\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0.5px 0.5px 0.5px rgb(49, 46, 46);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000000;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Editor = styled.div`\r\n  width: 50%;\r\n  border-radius: 8px;\r\n  z-index: 100000;\r\n  box-shadow: 0.5px 0.5px 0.5px rgb(0, 0, 0);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 5%;\r\n  outline: none;\r\n  border: none;\r\n  background: #121212;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Close = styled.span`\r\n  font-size: 1.8rem;\r\n  font-weight: 500;\r\n  color: #bb86fc;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport {\r\n  Editor,\r\n  CloseButton,\r\n  Close,\r\n  ButtonContainer,\r\n} from './ImageEditor.style';\r\nimport Button from '../Button/Button';\r\nimport Spinner from '../../Spinner/SpinnerComponent';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst ImageEditor = ({\r\n  visible,\r\n  closeModal,\r\n  image,\r\n  content,\r\n  editorRef,\r\n  handleCrop,\r\n  loading,\r\n  croppedImage,\r\n  sendImage,\r\n}) => {\r\n  return (\r\n    <Modal visible={visible}>\r\n      <Editor>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            {!croppedImage ? (\r\n              <AvatarEditor\r\n                ref={editorRef}\r\n                image={image}\r\n                width={200}\r\n                height={200}\r\n                border={50}\r\n                scale={1.5}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={croppedImage}\r\n                width='200'\r\n                height='200'\r\n                alt='croppedImage'\r\n              />\r\n            )}\r\n            <ButtonContainer>\r\n              <Button danger content='CLOSE' onClick={closeModal} />\r\n\r\n              {croppedImage ? (\r\n                <Button content={content} onClick={sendImage} />\r\n              ) : (\r\n                <Button content='CROP' onClick={handleCrop} />\r\n              )}\r\n            </ButtonContainer>\r\n            <CloseButton onClick={closeModal}>\r\n              <Close>&#10006;</Close>\r\n            </CloseButton>\r\n          </>\r\n        )}\r\n      </Editor>\r\n    </Modal>\r\n  );\r\n};\r\nImageEditor.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  image: PropTypes.string,\r\n  content: PropTypes.string.isRequired,\r\n  handleCrop: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  croppedImage: PropTypes.string,\r\n  sendImage: PropTypes.func.isRequired,\r\n  editorRef: PropTypes.shape({\r\n    current: PropTypes.shape({\r\n      value: PropTypes.elementType,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nImageEditor.defaultProps = {\r\n  image: null,\r\n  croppedImage: null,\r\n};\r\n\r\nexport default ImageEditor;\r\n"],"sourceRoot":""}